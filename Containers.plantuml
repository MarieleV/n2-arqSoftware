@startuml
!include <c4/C4_Container.puml>  

LAYOUT_WITH_LEGEND()

title Diagrama de Containers - Sistema VídeosON (VO) 2.0

Person(cliente, "Cliente", "Usuário que consome vídeos e gerencia sua assinatura.")
Person(admin, "Administrador", "Gerencia os vídeos disponíveis na plataforma.")

System_Boundary(vo, "Sistema VídeosON") {

    Container(web_app, "Aplicação Web", "React.js / Vue.js", 
        "Interface web responsiva que permite aos usuários acessarem o sistema.")
    
    Container(mobile_app, "Aplicação Mobile (opcional)", "React Native", 
        "Versão adaptada da aplicação para dispositivos móveis.")
    
    Container(frontend, "Frontend SPA", "JavaScript", 
        "Single Page Application responsável pela comunicação com o backend via APIs.")
    
    Container(api_backend, "API Backend", "Node.js (NestJS) ou Spring Boot", 
        "Fornece as APIs REST, autenticação, lógica de negócio e orquestração de serviços.")
    
    ContainerDb(db, "Banco de Dados", "MySQL ou PostgreSQL", 
        "Armazena dados de usuários, vídeos, históricos de consumo e status de assinatura.")
    
    Container(cache, "Cache", "Redis", 
        "Armazena sessões e dados frequentemente acessados para melhorar desempenho.")
    
    Container(queue, "Mensageria", "RabbitMQ / Kafka", 
        "Gerencia eventos assíncronos como notificações e logs de reprodução.")
    
    Container(external_api, "API de Pagamento", "Serviço externo (ex: Stripe)", 
        "Processa pagamentos das assinaturas dos clientes.")
    
    Container(monitoring, "Monitoramento", "Prometheus + Grafana", 
        "Coleta métricas e monitora falhas, desempenho e disponibilidade.")

    Container(email_service, "Serviço de E-mail", "SMTP / SendGrid", 
        "Envia notificações aos usuários e confirmações de pagamento.")
}

Rel(cliente, web_app, "Acessa via navegador", "HTTPS")
Rel(cliente, mobile_app, "Acessa via app mobile", "HTTPS")
Rel(cliente, frontend, "Interage com", "HTTPS/REST")
Rel(admin, frontend, "Gerencia conteúdo", "HTTPS")

Rel(frontend, api_backend, "Faz chamadas para", "REST/JSON")
Rel(api_backend, db, "Lê e grava dados em", "JDBC/ORM")
Rel(api_backend, cache, "Consulta dados em", "Redis Protocol")
Rel(api_backend, queue, "Publica eventos em", "AMQP/Kafka Protocol")
Rel(api_backend, external_api, "Verifica e processa pagamentos", "HTTPS")
Rel(api_backend, email_service, "Envia e-mails via", "SMTP/HTTP API")
Rel(api_backend, monitoring, "Exposição de métricas para", "HTTP")
Rel(queue, monitoring, "Envia eventos de falha e consumo")

@enduml
