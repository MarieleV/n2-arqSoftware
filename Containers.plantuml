@startuml

'!includeurl C:\Users\silva\Desktop\n2-arq\n2-arqSoftware\C4-PlantUML
!include <c4/C4_Container.puml>  
' Definindo o sistema principal


' Atores externos
Person(admin, "Administrador", "Responsável por publicar e remover vídeos.")
Person(cliente, "Cliente", "Usuário final que consome vídeos e realiza assinatura.")

System_Boundary(s1, "VídeosON (VO)") {


' Admin - dividido com API unificada
Container(webAcessoAdmin, "Página Web Acesso (Admin)", "React.js", "Tela de login do administrador.")
Container(webAdm, "Página Web Administrativa", "React.js", "Interface administrativa para gerenciar vídeos.")
Container(apiAdminUnificada, "API Administrativa", "Node.js (NestJS)", "Valida credenciais e gerencia vídeos e conteúdos administrativos.")

' Cliente
Container(frontendCliente, "Frontend Cliente (Plano + Consumo)", "React.js", "Interface do cliente para assinatura e consumo de vídeos.")
Container(apiCliente, "API Cliente", "Node.js (NestJS)", "Regras de negócio e autenticação do cliente.")


' Infraestrutura
Container(db, "Banco de Dados", "MySQL", "Armazena usuários, vídeos, históricos e status de assinatura.")
Container(cache, "Cache", "Redis", "Armazena sessões e acessos frequentes.")
Container(mq, "Mensageria", "RabbitMQ ou Kafka", "Comunicação assíncrona entre serviços.")
Container(monitoramento, "Monitoramento", "Prometheus + Grafana", "Métricas, logs e alertas.")
}

' Sistemas externos
System_Ext(pagamento, "Serviço de Pagamento", "Plataforma de pagamento para processar assinaturas.")
System_Ext(email, "Serviço de E-mail", "Envio de notificações de status de assinatura.")
System_Ext(streaming, "YouTube/CDN", "Entrega de vídeos sob demanda.")

' Relacionamentos Cliente
Rel(cliente, frontendCliente, "Acessa via navegador")
Rel(frontendCliente, apiCliente, "Chama API REST (HTTPS + JWT)")
Rel(apiCliente, db, "Consulta e atualização")
Rel(apiCliente, cache, "Leitura/Escrita de cache")
Rel(apiCliente, mq, "Publica e consome eventos")
Rel(apiCliente, monitoramento, "Envia métricas e logs")
Rel(apiCliente, pagamento, "Processa pagamentos via HTTPS")
Rel(apiCliente, email, "Envia notificações")
Rel(frontendCliente, streaming, "Carrega vídeos")

' Relacionamentos Admin
Rel(admin, webAcessoAdmin, "Acessa via navegador")
Rel(webAcessoAdmin, apiAdminUnificada, "Chama API REST (HTTPS)")
Rel(webAcessoAdmin, webAdm, "Deliver token-admin")
Rel(webAdm, apiAdminUnificada, "Chama API REST (HTTPS + JWT)")
Rel(apiAdminUnificada, db, "Consulta e atualização de vídeos e usuários")
Rel(apiAdminUnificada, cache, "Leitura/Escrita de cache")
Rel(apiAdminUnificada, mq, "Publica e consome eventos")
Rel(apiAdminUnificada, monitoramento, "Envia métricas e logs")

@enduml